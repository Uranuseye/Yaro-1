export default function _extends() {
<<<<<<< HEAD
  _extends = Object.assign ? Object.assign.bind() : function (target) {
=======
  _extends = Object.assign || function (target) {
>>>>>>> f8201306ba786516c9825d88012c1e0b5966996d
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
<<<<<<< HEAD
=======

>>>>>>> f8201306ba786516c9825d88012c1e0b5966996d
  return _extends.apply(this, arguments);
}